--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone III" LPM_DECODES=26 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 13.1 cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_lpm_compare 2013:10:23:18:05:48:SJ cbx_lpm_decode 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_4ta
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[25..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[25..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode1005w[3..0]	: WIRE;
	w_anode1015w[3..0]	: WIRE;
	w_anode1027w[2..0]	: WIRE;
	w_anode1036w[3..0]	: WIRE;
	w_anode1047w[3..0]	: WIRE;
	w_anode1057w[3..0]	: WIRE;
	w_anode1067w[3..0]	: WIRE;
	w_anode1077w[3..0]	: WIRE;
	w_anode1087w[3..0]	: WIRE;
	w_anode1097w[3..0]	: WIRE;
	w_anode1107w[3..0]	: WIRE;
	w_anode1118w[2..0]	: WIRE;
	w_anode1127w[3..0]	: WIRE;
	w_anode1138w[3..0]	: WIRE;
	w_anode1148w[3..0]	: WIRE;
	w_anode1158w[3..0]	: WIRE;
	w_anode1168w[3..0]	: WIRE;
	w_anode1178w[3..0]	: WIRE;
	w_anode1188w[3..0]	: WIRE;
	w_anode1198w[3..0]	: WIRE;
	w_anode1209w[2..0]	: WIRE;
	w_anode1218w[3..0]	: WIRE;
	w_anode1229w[3..0]	: WIRE;
	w_anode1239w[3..0]	: WIRE;
	w_anode1249w[3..0]	: WIRE;
	w_anode1259w[3..0]	: WIRE;
	w_anode1269w[3..0]	: WIRE;
	w_anode1279w[3..0]	: WIRE;
	w_anode1289w[3..0]	: WIRE;
	w_anode925w[2..0]	: WIRE;
	w_anode938w[3..0]	: WIRE;
	w_anode955w[3..0]	: WIRE;
	w_anode965w[3..0]	: WIRE;
	w_anode975w[3..0]	: WIRE;
	w_anode985w[3..0]	: WIRE;
	w_anode995w[3..0]	: WIRE;
	w_data923w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[25..0] = eq_wire[25..0];
	eq_wire[] = ( ( w_anode1289w[3..3], w_anode1279w[3..3], w_anode1269w[3..3], w_anode1259w[3..3], w_anode1249w[3..3], w_anode1239w[3..3], w_anode1229w[3..3], w_anode1218w[3..3]), ( w_anode1198w[3..3], w_anode1188w[3..3], w_anode1178w[3..3], w_anode1168w[3..3], w_anode1158w[3..3], w_anode1148w[3..3], w_anode1138w[3..3], w_anode1127w[3..3]), ( w_anode1107w[3..3], w_anode1097w[3..3], w_anode1087w[3..3], w_anode1077w[3..3], w_anode1067w[3..3], w_anode1057w[3..3], w_anode1047w[3..3], w_anode1036w[3..3]), ( w_anode1015w[3..3], w_anode1005w[3..3], w_anode995w[3..3], w_anode985w[3..3], w_anode975w[3..3], w_anode965w[3..3], w_anode955w[3..3], w_anode938w[3..3]));
	w_anode1005w[] = ( (w_anode1005w[2..2] & w_data923w[2..2]), (w_anode1005w[1..1] & w_data923w[1..1]), (w_anode1005w[0..0] & (! w_data923w[0..0])), w_anode925w[2..2]);
	w_anode1015w[] = ( (w_anode1015w[2..2] & w_data923w[2..2]), (w_anode1015w[1..1] & w_data923w[1..1]), (w_anode1015w[0..0] & w_data923w[0..0]), w_anode925w[2..2]);
	w_anode1027w[] = ( (w_anode1027w[1..1] & (! data_wire[4..4])), (w_anode1027w[0..0] & data_wire[3..3]), enable_wire);
	w_anode1036w[] = ( (w_anode1036w[2..2] & (! w_data923w[2..2])), (w_anode1036w[1..1] & (! w_data923w[1..1])), (w_anode1036w[0..0] & (! w_data923w[0..0])), w_anode1027w[2..2]);
	w_anode1047w[] = ( (w_anode1047w[2..2] & (! w_data923w[2..2])), (w_anode1047w[1..1] & (! w_data923w[1..1])), (w_anode1047w[0..0] & w_data923w[0..0]), w_anode1027w[2..2]);
	w_anode1057w[] = ( (w_anode1057w[2..2] & (! w_data923w[2..2])), (w_anode1057w[1..1] & w_data923w[1..1]), (w_anode1057w[0..0] & (! w_data923w[0..0])), w_anode1027w[2..2]);
	w_anode1067w[] = ( (w_anode1067w[2..2] & (! w_data923w[2..2])), (w_anode1067w[1..1] & w_data923w[1..1]), (w_anode1067w[0..0] & w_data923w[0..0]), w_anode1027w[2..2]);
	w_anode1077w[] = ( (w_anode1077w[2..2] & w_data923w[2..2]), (w_anode1077w[1..1] & (! w_data923w[1..1])), (w_anode1077w[0..0] & (! w_data923w[0..0])), w_anode1027w[2..2]);
	w_anode1087w[] = ( (w_anode1087w[2..2] & w_data923w[2..2]), (w_anode1087w[1..1] & (! w_data923w[1..1])), (w_anode1087w[0..0] & w_data923w[0..0]), w_anode1027w[2..2]);
	w_anode1097w[] = ( (w_anode1097w[2..2] & w_data923w[2..2]), (w_anode1097w[1..1] & w_data923w[1..1]), (w_anode1097w[0..0] & (! w_data923w[0..0])), w_anode1027w[2..2]);
	w_anode1107w[] = ( (w_anode1107w[2..2] & w_data923w[2..2]), (w_anode1107w[1..1] & w_data923w[1..1]), (w_anode1107w[0..0] & w_data923w[0..0]), w_anode1027w[2..2]);
	w_anode1118w[] = ( (w_anode1118w[1..1] & data_wire[4..4]), (w_anode1118w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode1127w[] = ( (w_anode1127w[2..2] & (! w_data923w[2..2])), (w_anode1127w[1..1] & (! w_data923w[1..1])), (w_anode1127w[0..0] & (! w_data923w[0..0])), w_anode1118w[2..2]);
	w_anode1138w[] = ( (w_anode1138w[2..2] & (! w_data923w[2..2])), (w_anode1138w[1..1] & (! w_data923w[1..1])), (w_anode1138w[0..0] & w_data923w[0..0]), w_anode1118w[2..2]);
	w_anode1148w[] = ( (w_anode1148w[2..2] & (! w_data923w[2..2])), (w_anode1148w[1..1] & w_data923w[1..1]), (w_anode1148w[0..0] & (! w_data923w[0..0])), w_anode1118w[2..2]);
	w_anode1158w[] = ( (w_anode1158w[2..2] & (! w_data923w[2..2])), (w_anode1158w[1..1] & w_data923w[1..1]), (w_anode1158w[0..0] & w_data923w[0..0]), w_anode1118w[2..2]);
	w_anode1168w[] = ( (w_anode1168w[2..2] & w_data923w[2..2]), (w_anode1168w[1..1] & (! w_data923w[1..1])), (w_anode1168w[0..0] & (! w_data923w[0..0])), w_anode1118w[2..2]);
	w_anode1178w[] = ( (w_anode1178w[2..2] & w_data923w[2..2]), (w_anode1178w[1..1] & (! w_data923w[1..1])), (w_anode1178w[0..0] & w_data923w[0..0]), w_anode1118w[2..2]);
	w_anode1188w[] = ( (w_anode1188w[2..2] & w_data923w[2..2]), (w_anode1188w[1..1] & w_data923w[1..1]), (w_anode1188w[0..0] & (! w_data923w[0..0])), w_anode1118w[2..2]);
	w_anode1198w[] = ( (w_anode1198w[2..2] & w_data923w[2..2]), (w_anode1198w[1..1] & w_data923w[1..1]), (w_anode1198w[0..0] & w_data923w[0..0]), w_anode1118w[2..2]);
	w_anode1209w[] = ( (w_anode1209w[1..1] & data_wire[4..4]), (w_anode1209w[0..0] & data_wire[3..3]), enable_wire);
	w_anode1218w[] = ( (w_anode1218w[2..2] & (! w_data923w[2..2])), (w_anode1218w[1..1] & (! w_data923w[1..1])), (w_anode1218w[0..0] & (! w_data923w[0..0])), w_anode1209w[2..2]);
	w_anode1229w[] = ( (w_anode1229w[2..2] & (! w_data923w[2..2])), (w_anode1229w[1..1] & (! w_data923w[1..1])), (w_anode1229w[0..0] & w_data923w[0..0]), w_anode1209w[2..2]);
	w_anode1239w[] = ( (w_anode1239w[2..2] & (! w_data923w[2..2])), (w_anode1239w[1..1] & w_data923w[1..1]), (w_anode1239w[0..0] & (! w_data923w[0..0])), w_anode1209w[2..2]);
	w_anode1249w[] = ( (w_anode1249w[2..2] & (! w_data923w[2..2])), (w_anode1249w[1..1] & w_data923w[1..1]), (w_anode1249w[0..0] & w_data923w[0..0]), w_anode1209w[2..2]);
	w_anode1259w[] = ( (w_anode1259w[2..2] & w_data923w[2..2]), (w_anode1259w[1..1] & (! w_data923w[1..1])), (w_anode1259w[0..0] & (! w_data923w[0..0])), w_anode1209w[2..2]);
	w_anode1269w[] = ( (w_anode1269w[2..2] & w_data923w[2..2]), (w_anode1269w[1..1] & (! w_data923w[1..1])), (w_anode1269w[0..0] & w_data923w[0..0]), w_anode1209w[2..2]);
	w_anode1279w[] = ( (w_anode1279w[2..2] & w_data923w[2..2]), (w_anode1279w[1..1] & w_data923w[1..1]), (w_anode1279w[0..0] & (! w_data923w[0..0])), w_anode1209w[2..2]);
	w_anode1289w[] = ( (w_anode1289w[2..2] & w_data923w[2..2]), (w_anode1289w[1..1] & w_data923w[1..1]), (w_anode1289w[0..0] & w_data923w[0..0]), w_anode1209w[2..2]);
	w_anode925w[] = ( (w_anode925w[1..1] & (! data_wire[4..4])), (w_anode925w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode938w[] = ( (w_anode938w[2..2] & (! w_data923w[2..2])), (w_anode938w[1..1] & (! w_data923w[1..1])), (w_anode938w[0..0] & (! w_data923w[0..0])), w_anode925w[2..2]);
	w_anode955w[] = ( (w_anode955w[2..2] & (! w_data923w[2..2])), (w_anode955w[1..1] & (! w_data923w[1..1])), (w_anode955w[0..0] & w_data923w[0..0]), w_anode925w[2..2]);
	w_anode965w[] = ( (w_anode965w[2..2] & (! w_data923w[2..2])), (w_anode965w[1..1] & w_data923w[1..1]), (w_anode965w[0..0] & (! w_data923w[0..0])), w_anode925w[2..2]);
	w_anode975w[] = ( (w_anode975w[2..2] & (! w_data923w[2..2])), (w_anode975w[1..1] & w_data923w[1..1]), (w_anode975w[0..0] & w_data923w[0..0]), w_anode925w[2..2]);
	w_anode985w[] = ( (w_anode985w[2..2] & w_data923w[2..2]), (w_anode985w[1..1] & (! w_data923w[1..1])), (w_anode985w[0..0] & (! w_data923w[0..0])), w_anode925w[2..2]);
	w_anode995w[] = ( (w_anode995w[2..2] & w_data923w[2..2]), (w_anode995w[1..1] & (! w_data923w[1..1])), (w_anode995w[0..0] & w_data923w[0..0]), w_anode925w[2..2]);
	w_data923w[2..0] = data_wire[2..0];
END;
--VALID FILE
