--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone III" LPM_DECODES=26 LPM_WIDTH=5 data eq
--VERSION_BEGIN 13.1 cbx_cycloneii 2013:10:23:18:05:48:SJ cbx_lpm_add_sub 2013:10:23:18:05:48:SJ cbx_lpm_compare 2013:10:23:18:05:48:SJ cbx_lpm_decode 2013:10:23:18:05:48:SJ cbx_mgl 2013:10:23:18:06:54:SJ cbx_stratix 2013:10:23:18:05:48:SJ cbx_stratixii 2013:10:23:18:05:48:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_t8a
( 
	data[4..0]	:	input;
	eq[25..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[25..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode1303w[2..0]	: WIRE;
	w_anode1317w[3..0]	: WIRE;
	w_anode1334w[3..0]	: WIRE;
	w_anode1344w[3..0]	: WIRE;
	w_anode1354w[3..0]	: WIRE;
	w_anode1364w[3..0]	: WIRE;
	w_anode1374w[3..0]	: WIRE;
	w_anode1384w[3..0]	: WIRE;
	w_anode1394w[3..0]	: WIRE;
	w_anode1406w[2..0]	: WIRE;
	w_anode1416w[3..0]	: WIRE;
	w_anode1427w[3..0]	: WIRE;
	w_anode1437w[3..0]	: WIRE;
	w_anode1447w[3..0]	: WIRE;
	w_anode1457w[3..0]	: WIRE;
	w_anode1467w[3..0]	: WIRE;
	w_anode1477w[3..0]	: WIRE;
	w_anode1487w[3..0]	: WIRE;
	w_anode1498w[2..0]	: WIRE;
	w_anode1508w[3..0]	: WIRE;
	w_anode1519w[3..0]	: WIRE;
	w_anode1529w[3..0]	: WIRE;
	w_anode1539w[3..0]	: WIRE;
	w_anode1549w[3..0]	: WIRE;
	w_anode1559w[3..0]	: WIRE;
	w_anode1569w[3..0]	: WIRE;
	w_anode1579w[3..0]	: WIRE;
	w_anode1590w[2..0]	: WIRE;
	w_anode1600w[3..0]	: WIRE;
	w_anode1611w[3..0]	: WIRE;
	w_anode1621w[3..0]	: WIRE;
	w_anode1631w[3..0]	: WIRE;
	w_anode1641w[3..0]	: WIRE;
	w_anode1651w[3..0]	: WIRE;
	w_anode1661w[3..0]	: WIRE;
	w_anode1671w[3..0]	: WIRE;
	w_data1301w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[25..0] = eq_wire[25..0];
	eq_wire[] = ( ( w_anode1671w[3..3], w_anode1661w[3..3], w_anode1651w[3..3], w_anode1641w[3..3], w_anode1631w[3..3], w_anode1621w[3..3], w_anode1611w[3..3], w_anode1600w[3..3]), ( w_anode1579w[3..3], w_anode1569w[3..3], w_anode1559w[3..3], w_anode1549w[3..3], w_anode1539w[3..3], w_anode1529w[3..3], w_anode1519w[3..3], w_anode1508w[3..3]), ( w_anode1487w[3..3], w_anode1477w[3..3], w_anode1467w[3..3], w_anode1457w[3..3], w_anode1447w[3..3], w_anode1437w[3..3], w_anode1427w[3..3], w_anode1416w[3..3]), ( w_anode1394w[3..3], w_anode1384w[3..3], w_anode1374w[3..3], w_anode1364w[3..3], w_anode1354w[3..3], w_anode1344w[3..3], w_anode1334w[3..3], w_anode1317w[3..3]));
	w_anode1303w[] = ( (w_anode1303w[1..1] & (! data_wire[4..4])), (w_anode1303w[0..0] & (! data_wire[3..3])), B"1");
	w_anode1317w[] = ( (w_anode1317w[2..2] & (! w_data1301w[2..2])), (w_anode1317w[1..1] & (! w_data1301w[1..1])), (w_anode1317w[0..0] & (! w_data1301w[0..0])), w_anode1303w[2..2]);
	w_anode1334w[] = ( (w_anode1334w[2..2] & (! w_data1301w[2..2])), (w_anode1334w[1..1] & (! w_data1301w[1..1])), (w_anode1334w[0..0] & w_data1301w[0..0]), w_anode1303w[2..2]);
	w_anode1344w[] = ( (w_anode1344w[2..2] & (! w_data1301w[2..2])), (w_anode1344w[1..1] & w_data1301w[1..1]), (w_anode1344w[0..0] & (! w_data1301w[0..0])), w_anode1303w[2..2]);
	w_anode1354w[] = ( (w_anode1354w[2..2] & (! w_data1301w[2..2])), (w_anode1354w[1..1] & w_data1301w[1..1]), (w_anode1354w[0..0] & w_data1301w[0..0]), w_anode1303w[2..2]);
	w_anode1364w[] = ( (w_anode1364w[2..2] & w_data1301w[2..2]), (w_anode1364w[1..1] & (! w_data1301w[1..1])), (w_anode1364w[0..0] & (! w_data1301w[0..0])), w_anode1303w[2..2]);
	w_anode1374w[] = ( (w_anode1374w[2..2] & w_data1301w[2..2]), (w_anode1374w[1..1] & (! w_data1301w[1..1])), (w_anode1374w[0..0] & w_data1301w[0..0]), w_anode1303w[2..2]);
	w_anode1384w[] = ( (w_anode1384w[2..2] & w_data1301w[2..2]), (w_anode1384w[1..1] & w_data1301w[1..1]), (w_anode1384w[0..0] & (! w_data1301w[0..0])), w_anode1303w[2..2]);
	w_anode1394w[] = ( (w_anode1394w[2..2] & w_data1301w[2..2]), (w_anode1394w[1..1] & w_data1301w[1..1]), (w_anode1394w[0..0] & w_data1301w[0..0]), w_anode1303w[2..2]);
	w_anode1406w[] = ( (w_anode1406w[1..1] & (! data_wire[4..4])), (w_anode1406w[0..0] & data_wire[3..3]), B"1");
	w_anode1416w[] = ( (w_anode1416w[2..2] & (! w_data1301w[2..2])), (w_anode1416w[1..1] & (! w_data1301w[1..1])), (w_anode1416w[0..0] & (! w_data1301w[0..0])), w_anode1406w[2..2]);
	w_anode1427w[] = ( (w_anode1427w[2..2] & (! w_data1301w[2..2])), (w_anode1427w[1..1] & (! w_data1301w[1..1])), (w_anode1427w[0..0] & w_data1301w[0..0]), w_anode1406w[2..2]);
	w_anode1437w[] = ( (w_anode1437w[2..2] & (! w_data1301w[2..2])), (w_anode1437w[1..1] & w_data1301w[1..1]), (w_anode1437w[0..0] & (! w_data1301w[0..0])), w_anode1406w[2..2]);
	w_anode1447w[] = ( (w_anode1447w[2..2] & (! w_data1301w[2..2])), (w_anode1447w[1..1] & w_data1301w[1..1]), (w_anode1447w[0..0] & w_data1301w[0..0]), w_anode1406w[2..2]);
	w_anode1457w[] = ( (w_anode1457w[2..2] & w_data1301w[2..2]), (w_anode1457w[1..1] & (! w_data1301w[1..1])), (w_anode1457w[0..0] & (! w_data1301w[0..0])), w_anode1406w[2..2]);
	w_anode1467w[] = ( (w_anode1467w[2..2] & w_data1301w[2..2]), (w_anode1467w[1..1] & (! w_data1301w[1..1])), (w_anode1467w[0..0] & w_data1301w[0..0]), w_anode1406w[2..2]);
	w_anode1477w[] = ( (w_anode1477w[2..2] & w_data1301w[2..2]), (w_anode1477w[1..1] & w_data1301w[1..1]), (w_anode1477w[0..0] & (! w_data1301w[0..0])), w_anode1406w[2..2]);
	w_anode1487w[] = ( (w_anode1487w[2..2] & w_data1301w[2..2]), (w_anode1487w[1..1] & w_data1301w[1..1]), (w_anode1487w[0..0] & w_data1301w[0..0]), w_anode1406w[2..2]);
	w_anode1498w[] = ( (w_anode1498w[1..1] & data_wire[4..4]), (w_anode1498w[0..0] & (! data_wire[3..3])), B"1");
	w_anode1508w[] = ( (w_anode1508w[2..2] & (! w_data1301w[2..2])), (w_anode1508w[1..1] & (! w_data1301w[1..1])), (w_anode1508w[0..0] & (! w_data1301w[0..0])), w_anode1498w[2..2]);
	w_anode1519w[] = ( (w_anode1519w[2..2] & (! w_data1301w[2..2])), (w_anode1519w[1..1] & (! w_data1301w[1..1])), (w_anode1519w[0..0] & w_data1301w[0..0]), w_anode1498w[2..2]);
	w_anode1529w[] = ( (w_anode1529w[2..2] & (! w_data1301w[2..2])), (w_anode1529w[1..1] & w_data1301w[1..1]), (w_anode1529w[0..0] & (! w_data1301w[0..0])), w_anode1498w[2..2]);
	w_anode1539w[] = ( (w_anode1539w[2..2] & (! w_data1301w[2..2])), (w_anode1539w[1..1] & w_data1301w[1..1]), (w_anode1539w[0..0] & w_data1301w[0..0]), w_anode1498w[2..2]);
	w_anode1549w[] = ( (w_anode1549w[2..2] & w_data1301w[2..2]), (w_anode1549w[1..1] & (! w_data1301w[1..1])), (w_anode1549w[0..0] & (! w_data1301w[0..0])), w_anode1498w[2..2]);
	w_anode1559w[] = ( (w_anode1559w[2..2] & w_data1301w[2..2]), (w_anode1559w[1..1] & (! w_data1301w[1..1])), (w_anode1559w[0..0] & w_data1301w[0..0]), w_anode1498w[2..2]);
	w_anode1569w[] = ( (w_anode1569w[2..2] & w_data1301w[2..2]), (w_anode1569w[1..1] & w_data1301w[1..1]), (w_anode1569w[0..0] & (! w_data1301w[0..0])), w_anode1498w[2..2]);
	w_anode1579w[] = ( (w_anode1579w[2..2] & w_data1301w[2..2]), (w_anode1579w[1..1] & w_data1301w[1..1]), (w_anode1579w[0..0] & w_data1301w[0..0]), w_anode1498w[2..2]);
	w_anode1590w[] = ( (w_anode1590w[1..1] & data_wire[4..4]), (w_anode1590w[0..0] & data_wire[3..3]), B"1");
	w_anode1600w[] = ( (w_anode1600w[2..2] & (! w_data1301w[2..2])), (w_anode1600w[1..1] & (! w_data1301w[1..1])), (w_anode1600w[0..0] & (! w_data1301w[0..0])), w_anode1590w[2..2]);
	w_anode1611w[] = ( (w_anode1611w[2..2] & (! w_data1301w[2..2])), (w_anode1611w[1..1] & (! w_data1301w[1..1])), (w_anode1611w[0..0] & w_data1301w[0..0]), w_anode1590w[2..2]);
	w_anode1621w[] = ( (w_anode1621w[2..2] & (! w_data1301w[2..2])), (w_anode1621w[1..1] & w_data1301w[1..1]), (w_anode1621w[0..0] & (! w_data1301w[0..0])), w_anode1590w[2..2]);
	w_anode1631w[] = ( (w_anode1631w[2..2] & (! w_data1301w[2..2])), (w_anode1631w[1..1] & w_data1301w[1..1]), (w_anode1631w[0..0] & w_data1301w[0..0]), w_anode1590w[2..2]);
	w_anode1641w[] = ( (w_anode1641w[2..2] & w_data1301w[2..2]), (w_anode1641w[1..1] & (! w_data1301w[1..1])), (w_anode1641w[0..0] & (! w_data1301w[0..0])), w_anode1590w[2..2]);
	w_anode1651w[] = ( (w_anode1651w[2..2] & w_data1301w[2..2]), (w_anode1651w[1..1] & (! w_data1301w[1..1])), (w_anode1651w[0..0] & w_data1301w[0..0]), w_anode1590w[2..2]);
	w_anode1661w[] = ( (w_anode1661w[2..2] & w_data1301w[2..2]), (w_anode1661w[1..1] & w_data1301w[1..1]), (w_anode1661w[0..0] & (! w_data1301w[0..0])), w_anode1590w[2..2]);
	w_anode1671w[] = ( (w_anode1671w[2..2] & w_data1301w[2..2]), (w_anode1671w[1..1] & w_data1301w[1..1]), (w_anode1671w[0..0] & w_data1301w[0..0]), w_anode1590w[2..2]);
	w_data1301w[2..0] = data_wire[2..0];
END;
--VALID FILE
